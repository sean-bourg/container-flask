# Docker compose file to setup multi-tiered environment for example.
# construct instance of a frontend proxy, database, and flask server.
version: "3.8"

# Define subnets for this environment.
# Proxy will sit on the public facing network and route traffic to the proxy
# private endpoints.
networks:
  network-public:
    name: cf-network-public
    driver: bridge
    internal: false

  network-private:
    name: cf-network-private
    driver: bridge
    internal: true

# Define services for this environment.
services:

  # add Proxy server to the public facing network listening on both port 80 and 443.
  proxy:
    container_name: "${CONTAINER_NAME_PROXY:-cf-proxy}"
    image: "${IMAGE_NAME_PROXY:-cf-proxy}"
    build: ./proxy
    restart: always
    networks:
      - network-public
      - network-private
    ports:
      - 80:80
      - 443:443
    depends_on:
      - cdn
      - app
    links:
      - cdn
      - app

  # add CDB server to the private subnet and listening on port 8081.
  cdn:
    container_name: "${CONTAINER_NAME_CDN:-cf-cdn}"
    image: "${CONTAINER_NAME_CDN:-cf-cdn}"
    build: ./cdn
    restart: always
    networks:
      - network-private
    ports:
      - 80:80

  # add app to the private subnet and listening on port 8080.
  app:
    container_name: "${CONTAINER_NAME_APP:-cf-app}"
    image: "${CONTAINER_NAME_APP:-cf-app}"
    build: ./app
    restart: always
    networks:
      - network-private
    ports:
      - 8080:8080
    depends_on:
      - database
    links:
      - database
    environment:
      - FLASK_DATABASE__host=${CONTAINER_NAME_DATABASE:-cf-database}
      - FLASK_DATABASE__user=${POSTGRES_USER:-postgres}
      - FLASK_DATABASE__password=${POSTGRES_PASSWORD:-postgres}
      - FLASK_DATABASE__database=${POSTGRES_DB:-ExampleApp}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-secret-key}

  # add datbase to private subnet and listening on port 5432.
  database:
    container_name: "${CONTAINER_NAME_DATABASE:-cf-database}"
    image: "${CONTAINER_NAME_DATABASE:-cf-database}"
    build: ./postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-ExampleApp}
    networks: 
      - network-private
